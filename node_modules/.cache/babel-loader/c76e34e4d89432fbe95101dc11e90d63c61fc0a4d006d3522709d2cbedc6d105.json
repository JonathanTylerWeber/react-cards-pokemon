{"ast":null,"code":"var _s = $RefreshSig$();\n// useAxios.js\nimport { useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\n// const useAxios = (baseUrl) => {\n//   const [cards, setCards] = useState([]);\n\n//   const addCard = async (endPoint = '') => {\n//     try {\n//       const url = baseUrl + endPoint;\n//       const response = await axios.get(url);\n//       setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n//     } catch (error) {\n//       console.error(\"Error adding card:\", error);\n//     }\n//   };\n\n//   return { addCard, cards };\n// }\n\nfunction useAxios(keyInLS, baseUrl) {\n  _s();\n  const [responses, setResponses] = useState();\n  const addResponseData = async (formatter = data => data, restOfUrl = \"\") => {\n    const response = await axios.get(`${baseUrl}${restOfUrl}`);\n    setResponses(data => [...data, formatter(response.data)]);\n  };\n  const clearResponses = () => setResponses([]);\n  return [responses, addResponseData, clearResponses];\n}\n_s(useAxios, \"0WU2obr2DgGRxEnvHY3uJ/sUQcE=\");\nexport default useAxios;","map":{"version":3,"names":["useState","v1","uuid","axios","useAxios","keyInLS","baseUrl","_s","responses","setResponses","addResponseData","formatter","data","restOfUrl","response","get","clearResponses"],"sources":["/Users/jonathan/Documents/code/springboard/react/react-cards-pokemon/src/hooks/useAxios.js"],"sourcesContent":["// useAxios.js\nimport { useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\n// const useAxios = (baseUrl) => {\n//   const [cards, setCards] = useState([]);\n\n//   const addCard = async (endPoint = '') => {\n//     try {\n//       const url = baseUrl + endPoint;\n//       const response = await axios.get(url);\n//       setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n//     } catch (error) {\n//       console.error(\"Error adding card:\", error);\n//     }\n//   };\n\n//   return { addCard, cards };\n// }\n\nfunction useAxios(keyInLS, baseUrl) {\n  const [responses, setResponses] = useState()\n\n  const addResponseData = async (formatter = data => data, restOfUrl = \"\") => {\n    const response = await axios.get(`${baseUrl}${restOfUrl}`);\n    setResponses(data => [...data, formatter(response.data)]);\n  };\n\n  const clearResponses = () => setResponses([]);\n\n  return [responses, addResponseData, clearResponses];\n}\n\nexport default useAxios;\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,SAASC,QAAQA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC;EAE5C,MAAMU,eAAe,GAAG,MAAAA,CAAOC,SAAS,GAAGC,IAAI,IAAIA,IAAI,EAAEC,SAAS,GAAG,EAAE,KAAK;IAC1E,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,GAAET,OAAQ,GAAEO,SAAU,EAAC,CAAC;IAC1DJ,YAAY,CAACG,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,SAAS,CAACG,QAAQ,CAACF,IAAI,CAAC,CAAC,CAAC;EAC3D,CAAC;EAED,MAAMI,cAAc,GAAGA,CAAA,KAAMP,YAAY,CAAC,EAAE,CAAC;EAE7C,OAAO,CAACD,SAAS,EAAEE,eAAe,EAAEM,cAAc,CAAC;AACrD;AAACT,EAAA,CAXQH,QAAQ;AAajB,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}