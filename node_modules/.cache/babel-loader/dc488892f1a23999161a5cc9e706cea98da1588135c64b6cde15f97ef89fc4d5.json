{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport axios from \"axios\";\nconst useAxios = (url, endPoint) => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const addCard = async () => {\n    if (endPoint) {\n      const response = await axios.get(`${url}/${endPoint}/`);\n    } else {\n      const response = await axios.get(url);\n    }\n    setCards(cards => [...cards, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n  return {\n    addCard,\n    cards\n  };\n};\n_s(useAxios, \"3Rb2RowhqfSKkufviexCcjkH0X8=\");\nexport default useAxios;","map":{"version":3,"names":["useState","v1","uuid","axios","useAxios","url","endPoint","_s","cards","setCards","addCard","response","get","data","id"],"sources":["/Users/jonathan/Documents/code/springboard/react/react-cards-pokemon/src/hooks/useAxios.js"],"sourcesContent":["import { useState } from \"react\";\nimport { v1 as uuid } from \"uuid\";\nimport axios from \"axios\";\n\nconst useAxios = (url, endPoint) => {\n  const [cards, setCards] = useState([]);\n\n  const addCard = async () => {\n    if (endPoint) {\n      const response = await axios.get(`${url}/${endPoint}/`);\n    }\n    else {\n      const response = await axios.get(url);\n    }\n\n    setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  };\n\n  return { addCard, cards };\n}\n\nexport default useAxios;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAGA,CAACC,GAAG,EAAEC,QAAQ,KAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMU,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAIJ,QAAQ,EAAE;MACZ,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAE,GAAEP,GAAI,IAAGC,QAAS,GAAE,CAAC;IACzD,CAAC,MACI;MACH,MAAMK,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAACP,GAAG,CAAC;IACvC;IAEAI,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAE;MAAE,GAAGG,QAAQ,CAACE,IAAI;MAAEC,EAAE,EAAEZ,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACjE,CAAC;EAED,OAAO;IAAEQ,OAAO;IAAEF;EAAM,CAAC;AAC3B,CAAC;AAAAD,EAAA,CAfKH,QAAQ;AAiBd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}