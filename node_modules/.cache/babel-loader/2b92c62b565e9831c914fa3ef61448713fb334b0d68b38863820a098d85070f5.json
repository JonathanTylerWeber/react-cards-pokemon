{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst useAxios = () => {\n  _s();\n  const [cards, setCards] = useState([]);\n  const addCard = async () => {\n    const response = await axios.get(\"https://deckofcardsapi.com/api/deck/new/draw/\");\n    setCards(cards => [...cards, {\n      ...response.data,\n      id: uuid()\n    }]);\n  };\n};\n\n// const [cards, setCards] = useState([]);\n//   const addCard = async () => {\n//     const response = await axios.get(\n//       \"https://deckofcardsapi.com/api/deck/new/draw/\"\n//     );\n//     setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n//   };\n_s(useAxios, \"3Rb2RowhqfSKkufviexCcjkH0X8=\");\nexport default useAxios;","map":{"version":3,"names":["useEffect","useState","useAxios","_s","cards","setCards","addCard","response","axios","get","data","id","uuid"],"sources":["/Users/jonathan/Documents/code/springboard/react/react-cards-pokemon/src/hooks/useAxios.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useAxios = () => {\n  const [cards, setCards] = useState([]);\n  const addCard = async () => {\n    const response = await axios.get(\n      \"https://deckofcardsapi.com/api/deck/new/draw/\"\n    );\n    setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n  };\n}\n\n// const [cards, setCards] = useState([]);\n//   const addCard = async () => {\n//     const response = await axios.get(\n//       \"https://deckofcardsapi.com/api/deck/new/draw/\"\n//     );\n//     setCards(cards => [...cards, { ...response.data, id: uuid() }]);\n//   };\n\nexport default useAxios;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMK,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAC9B,+CACF,CAAC;IACDJ,QAAQ,CAACD,KAAK,IAAI,CAAC,GAAGA,KAAK,EAAE;MAAE,GAAGG,QAAQ,CAACG,IAAI;MAAEC,EAAE,EAAEC,IAAI,CAAC;IAAE,CAAC,CAAC,CAAC;EACjE,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AAAAT,EAAA,CAhBMD,QAAQ;AAkBd,eAAeA,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}